// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"notify-server/internal/biz"
	"notify-server/internal/data"
	"notify-server/internal/pkg"
	"notify-server/internal/service/handle"
	"notify-server/internal/service/router"
	"notify/pkg/config"
)

// Injectors from wire.go:

func initApp(fc config.FileConfig) (*pkg.App, error) {
	configConfig, err := data.NewConfig(fc)
	if err != nil {
		return nil, err
	}
	client := data.NewEntClient(configConfig)
	userRepo := data.NewUserRepo(client)
	userUseCase := biz.NewUserUseCase(userRepo)
	userService := handle.NewUserService(userUseCase)
	monitorRouter := &router.MonitorRouter{
		ManageApi: userService,
	}
	manageRouter := &router.ManageRouter{
		ManageApi: userService,
	}
	app, err := pkg.NewApp(configConfig, monitorRouter, manageRouter)
	if err != nil {
		return nil, err
	}
	return app, nil
}
